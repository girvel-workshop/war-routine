#!/usr/bin/xonsh

from termcolor import colored

def red(text):
    return colored(text, "red")

def get_name():
    return $(basename $PWD)[:-1]

if $ARG1 == "launch": 
    if ![$ARG0 test].returncode != 0:
        read -p "There are failed tests. Do you want to stop the launch? [y/N] " -n 1 -r
        echo
        if $REPLY in ("Y", "y"):
            exit(1)
    print("Launching", red(get_name()))
    exit(![love .].returncode)

if $ARG1 == "commit":
    if ![$ARG0 test].returncode != 0:
        read -p "There are failed tests. Do you want to stop the commit? [y/N] " -n 1 -r
        echo
        if $REPLY in ("Y", "y"):
            exit(1)
    git add .
    git commit -m $ARG2
    git push origin master

    exit(0)

if $ARG1 == "test":
    print("Starting", red("EROS"), "tests via", red("busted"))
    result1 = ![love . selftest].returncode

    print("Starting", red(get_name()), "tests via", red("busted"))
    result2 = ![love . test].returncode

    if result1 * result2:
        exit(1)

if $ARG1 == "build":
    print("Starting", red(get_name()), "build")

    mkdir -p bin/build
    print("Creating love file")
    zip -9 -r @("bin/build/" + get_name() + ".love") . -q
    cat eros/bin/love.exe @("bin/build/" + get_name() + ".love") > @("bin/" + get_name() + ".exe")
    rm -r bin/build

    print("Creating final zip archive")
    rm -rf @("bin/" + get_name() + ".zip")
    zip -9 -r @("bin/" + get_name() + ".zip") bin -q
    print("Build finished!")